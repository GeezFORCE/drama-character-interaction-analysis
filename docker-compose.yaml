services:
  scraper:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: scraper
        SERVICE_VERSION: 1.0.0
        PORT: 8081
      no_cache: true
    image: scraper:latest
    container_name: scraper
    ports:
      - "8081:8081"
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVICE_NAME=scraper
      - EXIST_DB_URL=http://exist-db:8080
      - PROCESSOR_URL=http://processor:8082
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - exist-db
      - processor

  processor:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: processor
        SERVICE_VERSION: 1.0.0
        PORT: 8082
    image: processor:latest
    container_name: processor
    ports:
      - "8082:8082"
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVICE_NAME=processor
      - NEO4J_URL=bolt://neo4j:7687
      - EXIST_DB_URL=http://exist-db:8080
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - exist-db
      - neo4j

  visualizer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: visualizer
        SERVICE_VERSION: 1.0.0
        PORT: 8083
    image: visualizer:latest
    container_name: visualizer
    ports:
      - "8083:8083"
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVICE_NAME=visualizer
      - NEO4J_URL=bolt://neo4j:7687
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - neo4j


  exist-db:
    image: ubuntu:20.04
    container_name: exist-db
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - exist_data:/opt/exist/webapp/WEB-INF/data
      - exist_logs:/opt/exist/logs
      - exist_backups:/opt/exist/backup
    working_dir: /opt/exist
    command: >
      bash -c "
      apt-get update &&
      apt-get install -y openjdk-11-jdk curl wget unzip bzip2 &&
      export JAVA_HOME=\$(dirname \$(dirname \$(readlink -f \$(which java)))) &&
      echo \"JAVA_HOME set to: \$JAVA_HOME\" &&
      if [ ! -f /opt/exist/bin/startup.sh ]; then
        wget -O exist.tar.bz2 https://github.com/eXist-db/exist/releases/download/eXist-6.4.0/exist-distribution-6.4.0-unix.tar.bz2 &&
        tar -xjf exist.tar.bz2 --strip-components=1 &&
        rm exist.tar.bz2
      fi &&
      echo 'Starting eXist-db...' &&
      ./bin/startup.sh
      "
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/exist/" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    volumes:
      - neo4j_logs:/logs
      - neo4j_config:/config
      - neo4j_data:/data
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/your_password
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: always

volumes:
  exist_data:
    driver: local
  exist_logs:
    driver: local
  exist_backups:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_config:
    driver: local
  neo4j_data:
    driver: local
  neo4j_plugins:
    driver: local